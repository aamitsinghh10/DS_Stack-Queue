class Solution {
public:
    bool checkValidString(string s) 
    {
        stack<int> star,open;
        
         for(int i=0;i<s.size();++i)
        {
            if(s[i]=='(')
                open.push(i);
            else if(s[i]=='*')
                star.push(i);
            else
            {
                if(!open.empty())//when their is opening bracket available for closing bracket
                {
                    open.pop();
                }
                else if(!star.empty())//when their are no opening brackets,then '*' balance closing bracket
                {
                    star.pop();
                }
                else
                    return false;
            }
        }
        //Now process leftover opening Brackets
        
        while(!open.empty())
        {
            if(star.empty())
                return false;
            else if(!star.empty() && open.top()<star.top())
            {
                star.pop();
                open.pop();
            }
            else
                return false;
        }
       return true;     
    }
};
